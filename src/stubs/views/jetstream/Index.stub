<template>
    <app-layout>
        <template #header>
            <h2 class="font-semibold text-xl text-gray-800 leading-tight">
                {{modelTitlePlural}}
            </h2>
        </template>

        <div class="py-12">
            <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
                <div class="mb-6 flex justify-between items-center">
                    <search-filter v-model="search" class="w-1/2" />
                    <Link :href="route('{{modelRoute}}.create')" class="px-6 py-2 bg-indigo-600 hover:bg-indigo-700 text-white font-bold rounded">
                        Create {{modelTitle}}
                    </Link>
                </div>

                <div class="bg-white overflow-hidden shadow-xl sm:rounded-lg">
                    <div class="overflow-x-auto">
                        <table class="min-w-full divide-y divide-gray-200">
                            <thead>
                                <tr>
                                    {{tableHeader}}
                                    <th scope="col" class="relative px-6 py-3 text-right font-medium text-gray-500 uppercase tracking-wider">
                                        Actions
                                    </th>
                                </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                                <tr v-if="{{modelNamePluralLowerCase}}.data.length === 0">
                                    <td colspan="100%" class="px-6 py-4 text-center text-gray-500">No data</td>
                                </tr>
                                <tr v-for="{{modelNameLowerCase}} in {{modelNamePluralLowerCase}}.data" :key="{{modelNameLowerCase}}.id">
                                    {{tableBody}}
                                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                        <Link
                                            :href="route('{{modelRoute}}.show', {{modelNameLowerCase}}.id)"
                                            class="inline-flex items-center px-3 py-1.5 bg-blue-100 text-blue-700 hover:bg-blue-200 rounded-md text-sm font-medium transition"
                                        >
                                            View
                                        </Link>

                                        <Link
                                            :href="route('{{modelRoute}}.edit', {{modelNameLowerCase}}.id)"
                                            class="inline-flex items-center px-3 py-1.5 bg-yellow-100 text-yellow-800 hover:bg-yellow-200 rounded-md text-sm font-medium transition ml-2"
                                        >
                                            Edit
                                        </Link>

                                        <button
                                            @click="destroy({{modelNameLowerCase}})"
                                            class="inline-flex items-center px-3 py-1.5 bg-red-100 text-red-700 hover:bg-red-200 rounded-md text-sm font-medium transition ml-2"
                                        >
                                            Delete
                                        </button>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <pagination class="mt-6" :links="{{modelNamePluralLowerCase}}.links" />
                </div>
            </div>
        </div>
    </app-layout>
</template>

<script>
import { defineComponent } from 'vue'
import AppLayout from '@/Layouts/AppLayout.vue'
import Pagination from '@/Components/Pagination.vue'
import SearchFilter from '@/Components/SearchFilter.vue'
import { Link } from '@inertiajs/vue3'

export default defineComponent({
    components: {
        AppLayout,
        Pagination,
        SearchFilter,
        Link
    },
    props: {
        {{modelNamePluralLowerCase}}: Object,
        filters: Object
    },
    data() {
        return {
            search: this.filters.search
        }
    },
    watch: {
        search: {
            handler(value) {
                this.$inertia.get(route('{{modelRoute}}.index'), { search: value }, {
                    preserveState: true,
                    replace: true
                })
            },
            deep: true
        }
    },
    methods: {
        destroy({{modelNameLowerCase}}) {
            if (confirm(`Are you sure you want to delete this {{modelTitle}}?`)) {
                this.$inertia.delete(route('{{modelRoute}}.destroy', {{modelNameLowerCase}}.id))
            }
        }
    }
})
</script>